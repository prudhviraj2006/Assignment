import requests

def fetch_weather(api_key, location, unit='metric'):
    """
    Fetches weather data from OpenWeatherMap API.
    
    Args:
    - api_key (str): Your OpenWeatherMap API key.
    - location (str): Location (city name or coordinates) for which weather information is needed.
    - unit (str): Temperature unit. Default is metric (Celcius).

    Returns:
    - dict: Weather data as a dictionary.
    """
    base_url = 'https://api.openweathermap.org/data/2.5/weather'

    params = {
        'q': location,
        'units': unit,
        'appid': api_key
    }

    # Sending GET request to OpenWeatherMap API
    try:
        response = requests.get(base_url, params=params)
        response.raise_for_status()  # Raise exception for bad responses
        weather_data = response.json()  # Parsing JSON response
        return weather_data
    except requests.exceptions.RequestException as e:
        print(f"Error fetching data: {e}")
        return None

def display_weather(weather_data):
    """
    Displays weather information to the user.
    
    Args:
    - weather_data (dict): Weather data dictionary from OpenWeatherMap API.
    """
    if weather_data is None:
        print("Failed to fetch weather data.")
        return
    
    # Extracting relevant information from weather_data
    city = weather_data['name']
    country = weather_data['sys']['country']
    temperature = weather_data['main']['temp']
    weather_desc = weather_data['weather'][0]['description']
    humidity = weather_data['main']['humidity']
    wind_speed = weather_data['wind']['speed']

    # Displaying the weather information
    print(f"Weather in {city}, {country}:")
    print(f"Temperature: {temperature}Â°C")
    print(f"Weather Description: {weather_desc}")
    print(f"Humidity: {humidity}%")
    print(f"Wind Speed: {wind_speed} m/s")

if __name__ == '__main__':
    # Replace 'YOUR_API_KEY' with your actual OpenWeatherMap API key
    api_key = 'enter'
    location = input("Enter city name or coordinates (latitude,longitude): ")

    weather_data = fetch_weather(api_key, location)
    display_weather(weather_data)
